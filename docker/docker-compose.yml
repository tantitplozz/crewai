version: '3.8'

services:
  # Main automation service
  automation:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: automation-bot
    environment:
      - GOLOGIN_TOKEN=${GOLOGIN_TOKEN}
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_ENABLED=true
      - WEBSOCKET_URL=ws://websocket:8000
      - WEBSOCKET_ENABLED=true
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - TELEGRAM_ENABLED=${TELEGRAM_ENABLED:-false}
      - HEADLESS=${HEADLESS:-false}
    volumes:
      - ../logs:/app/logs
      - ../screenshots:/app/screenshots
      - ../orders:/app/orders
      - ../src:/app/src
    depends_on:
      - mongodb
      - redis
    networks:
      - automation-network
    stdin_open: true
    tty: true

  # MongoDB for logging
  mongodb:
    image: mongo:7.0
    container_name: automation-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=automation_logs
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - automation-network

  # Redis for caching and queuing
  redis:
    image: redis:7-alpine
    container_name: automation-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - automation-network

  # WebSocket server
  websocket:
    build:
      context: ..
      dockerfile: docker/Dockerfile.websocket
    container_name: automation-websocket
    ports:
      - "8000:8000"
    networks:
      - automation-network

  # Web UI (React)
  webui:
    build:
      context: ../webui
      dockerfile: Dockerfile
    container_name: automation-webui
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:7777
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - websocket
    networks:
      - automation-network

  # API Server
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: automation-api
    ports:
      - "7777:7777"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - automation-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: automation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - webui
      - websocket
    networks:
      - automation-network

volumes:
  mongodb_data:

networks:
  automation-network:
    driver: bridge
